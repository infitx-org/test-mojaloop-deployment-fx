# This is a YAML-formatted file.

sdk-scheme-adapter:
  enabled: true

  ## Local re-usable configs
  config:
    simName: &CONFIG_FXP_NAME fxp
    database: &CONFIG_FXP_DB 5

  sdk-scheme-adapter-api-svc:
    enabled: true
    nameOverride: 'fxp-sdk-api-svc'

    redis:
      database: *CONFIG_FXP_DB # This is a number between 0 to 15

    config:
      simName: *CONFIG_FXP_NAME

    ingress:
      ## @param ingress.enabled Enable ingress record generation for %%MAIN_CONTAINER_NAME%%
      ##
      enabled: true
      ## @param ingress.pathType Ingress path type
      ##
      pathType: ImplementationSpecific
      ## @param ingress.apiVersion Force Ingress API version (automatically detected if not set)
      ##
      apiVersion:
      ## @param ingress.hostname Default host for the ingress record
      ##
      hostname: fxp-sdk-scheme-adapter.local
      ## @param ingress.path Default path for the ingress record
      ## NOTE: You may need to set this to '/*' in order to use this with ALB ingress controllers
      ##
      path: /
      ## @param ingress.annotations Additional custom annotations for the ingress record
      ## NOTE: If `ingress.certManager=true`, annotation `kubernetes.io/tls-acme: "true"` will automatically be added
      ##
      annotations: {}
      ## Example annotations for ingress class and rewrite-targets
      ## https://kubernetes.github.io/ingress-nginx/examples/rewrite/
      # nginx.ingress.kubernetes.io/rewrite-target: '/'
      # nginx.ingress.kubernetes.io/rewrite-target: '/$2'
      ## https://kubernetes.github.io/ingress-nginx/user-guide/multiple-ingress/
      # kubernetes.io/ingress.class: nginx
      ## https://kubernetes.github.io/ingress-nginx/user-guide/tls/#automated-certificate-management-with-kube-lego
      # kubernetes.io/tls-acme: "true""

      ## @param ingress.tls Enable TLS configuration for the host defined at `ingress.hostname` parameter
      ## TLS certificates will be retrieved from a TLS secret with name: `{{- printf "%s-tls" .Values.ingress.hostname }}`
      ## You can:
      ##   - Use the `ingress.secrets` parameter to create this TLS secret
      ##   - Relay on cert-manager to create it by setting `ingress.certManager=true`
      ##   - Relay on Helm to create self-signed certificates by setting `ingress.selfSigned=true`
      ##
      tls: false
      ## @param ingress.certManager Add the corresponding annotations for cert-manager integration
      ##
      certManager: false
      ## @param ingress.selfSigned Create a TLS secret for this ingress record using self-signed certificates generated by Helm
      ##
      selfSigned: false
      ## @param ingress.extraHosts An array with additional hostname(s) to be covered with the ingress record
      ## e.g:
      ## extraHosts:
      ##   - name: transfer-api-svc.local
      ##     path: /
      ##
      ## @param ingress.extraPaths An array with additional arbitrary paths that may need to be added to the ingress under the main host
      ## e.g:
      ## extraPaths:
      ## - path: /*
      ##   backend:
      ##     serviceName: ssl-redirect
      ##     servicePort: use-annotation
      ##
      # extraPaths: []
      extraPaths:
      - path: /inbound/
        pathType: ImplementationSpecific
        backend:
          service:
            name: '{{ include "common.names.fullname" . }}'
            port:
              name: inboundapi
          # serviceName: '{{ include "common.names.fullname" . }}'
          # servicePort: inboundapi
      - path: /outbound/
        pathType: ImplementationSpecific
        backend:
          service:
            name: '{{ include "common.names.fullname" . }}'
            port:
              name: outboundapi
          # serviceName: '{{ include "common.names.fullname" . }}'
          # servicePort: outboundapi
      - path: /sdktest/
        pathType: ImplementationSpecific
        backend:
          service:
            name: '{{ include "common.names.fullname" . }}'
            port:
              name: testapi
          ## This is required for
          # serviceName: '{{ include "common.names.fullname" . }}'
          # servicePort: testapi
      ## @param ingress.extraTls TLS configuration for additional hostname(s) to be covered with this ingress record
      ## ref: https://kubernetes.io/docs/concepts/services-networking/ingress/#tls
      ## e.g:
      ## extraTls:
      ## - hosts:
      ##     - transfer-api-svc.local
      ##   secretName: transfer-api-svc.local-tls
      ##
      extraTls: []
      ## @param ingress.secrets Custom TLS certificates as secrets
      ## NOTE: 'key' and 'certificate' are expected in PEM format
      ## NOTE: 'name' should line up with a 'secretName' set further up
      ## If it is not set and you're using cert-manager, this is unneeded, as it will create a secret for you with valid certificates
      ## If it is not set and you're NOT using cert-manager either, self-signed certificates will be created valid for 365 days
      ## It is also possible to create and manage the certificates outside of this helm chart
      ## Please see README.md for more information
      ## e.g:
      ## secrets:
      ##   - name: transfer-api-svc.local-tls
      ##     key: |-
      ##       -----BEGIN RSA PRIVATE KEY-----
      ##       ...
      ##       -----END RSA PRIVATE KEY-----
      ##     certificate: |-
      ##       -----BEGIN CERTIFICATE-----
      ##       ...
      ##       -----END CERTIFICATE-----
      ##
      secrets: []
      className: "nginx"

    env:
      DFSP_ID: '{{ .Values.config.simName }}'
      PEER_ENDPOINT: mojaloop.hub.external.fspiop.endpoint:1234

      ALS_ENDPOINT: account-lookup-service-host
      QUOTES_ENDPOINT: quoting-service-host
      TRANSFERS_ENDPOINT: ml-api-adapter-host
      FX_QUOTES_ENDPOINT: quoting-service-host
      FX_TRANSFERS_ENDPOINT: ml-api-adapter-host
      TRANSACTION_REQUESTS_ENDPOINT: ""
      BULK_QUOTES_ENDPOINT: ""
      BULK_TRANSFERS_ENDPOINT: ""

      BACKEND_ENDPOINT: '{{ .Release.Name }}-{{ .Values.config.simName }}-ttk-backend:4040'

      ILP_SECRET: Quaixohyaesahju3thivuiChai5cahng
      EXPIRY_SECONDS: 60
      REQUEST_PROCESSING_TIMEOUT_SECONDS: 4
      RESERVE_NOTIFICATION: false
      RESOURCE_VERSIONS: transfers=1.1,participants=1.1
      PM4ML_ENABLED: false
      ENABLE_BACKEND_EVENT_HANDLER: false
      ENABLE_FSPIOP_EVENT_HANDLER: false

      SUPPORTED_CURRENCIES: XOF
      GET_SERVICES_FXP_RESPONSE: testfxp1
    initContainers: []
  sdk-scheme-adapter-dom-evt-handler:
    enabled: false

  sdk-scheme-adapter-cmd-evt-handler:
    enabled: false

ml-testing-toolkit:
  enabled: true

  ml-testing-toolkit-backend:
    enabled: true
    nameOverride: 'fxp-ttk-backend'

    config_files:
      user_config.json:
        CALLBACK_ENDPOINT: 'http://$release_name-fxp-sdk-api-svc:4001'
      system_config.json: {
        "API_DEFINITIONS": [
          {
            "type": "sdk-scheme-adapter-backend-v2_1_0-openapi3-snippets",
            "version": "2.1",
            "folderPath": "sdk-scheme-adapter-backend-v2_1_0-openapi3-snippets_2.1",
            "hostnames": [],
            "asynchronous": false
          }
        ]
      }
      rules_response__default.json: [
        {
            "ruleId": 6,
            "priority": 1,
            "description": "FXP - post /fxQuotes",
            "apiVersion": {
              "minorVersion": 1,
              "majorVersion": 2,
              "type": "sdk-scheme-adapter-backend-v2_1_0-openapi3-snippets",
              "asynchronous": false
            },
            "conditions": {
              "all": [
                {
                  "fact": "operationPath",
                  "operator": "equal",
                  "value": "/fxQuotes"
                },
                {
                  "fact": "method",
                  "operator": "equal",
                  "value": "post"
                }
              ]
            },
            "event": {
              "method": null,
              "path": null,
              "params": {
                "body": {
                  "homeTransactionId": "homeTransactionId-123",
                  "conversionTerms": {
                    "conversionId": "{$request.body.conversionTerms.conversionId}",
                    "determiningTransferId": "b51ec534-ee48-4575-b6a9-ead2955b8069",
                    "initiatingFsp": "{$request.body.conversionTerms.initiatingFsp}",
                    "counterPartyFsp": "{$request.body.conversionTerms.counterPartyFsp}",
                    "amountType": "SEND",
                    "sourceAmount": {
                      "currency": "{$request.body.conversionTerms.sourceAmount.currency}",
                      "amount": "{$environment.sourceAmountValue}"
                    },
                    "targetAmount": {
                      "currency": "{$request.body.conversionTerms.targetAmount.currency}",
                      "amount": "{$environment.targetAmountValue}"
                    },
                    "expiration": "{$request.body.conversionTerms.expiration}",
                    "charges": [
                      {
                        "chargeType": "string",
                        "sourceAmount": {
                          "currency": "{$request.body.conversionTerms.sourceAmount.currency}",
                          "amount": "33"
                        },
                        "targetAmount": {
                          "currency": "{$request.body.conversionTerms.targetAmount.currency}",
                          "amount": "6000"
                        }
                      }
                    ]
                  }
                },
                "statusCode": "200",
                "scripts": {
                  "exec": [
                    "const fxQuoteBody = JSON.parse(request.body)",
                    "environment.sourceAmountValue = fxQuoteBody.conversionTerms.sourceAmount.amount || 300",
                    "environment.targetAmountValue = fxQuoteBody.conversionTerms.targetAmount.amount || 48000"
                  ],
                  "scriptingEngine": "javascript"
                }
              },
              "type": "FIXED_RESPONSE"
            },
            "type": "response",
            "version": 1
          },
          {
            "ruleId": 7,
            "priority": 1,
            "description": "FXP - post /fxTransfers response",
            "apiVersion": {
              "minorVersion": 1,
              "majorVersion": 2,
              "type": "sdk-scheme-adapter-backend-v2_1_0-openapi3-snippets",
              "asynchronous": false
            },
            "conditions": {
              "all": [
                {
                  "fact": "operationPath",
                  "operator": "equal",
                  "value": "/fxTransfers"
                },
                {
                  "fact": "method",
                  "operator": "equal",
                  "value": "post"
                }
              ]
            },
            "event": {
              "method": null,
              "path": null,
              "params": {
                "body": {
                  "homeTransactionId": "{$request.body.homeTransactionId}",
                  "completedTimestamp": "{$environment.completedTimestamp}",
                  "conversionState": "RESERVED"
                },
                "statusCode": "200",
                "scripts": {
                  "exec": [
                    "environment.completedTimestamp = new Date().toISOString()"
                  ],
                  "scriptingEngine": "javascript"
                }
              },
              "type": "FIXED_RESPONSE"
            },
            "type": "response",
            "version": 1
          }
      ]
      api_definitions__sdk-scheme-adapter-backend-v2_1_0-openapi3-snippets_2.1__api_spec.yaml: 'https://raw.githubusercontent.com/mojaloop/api-snippets/v17.4.0/docs/sdk-scheme-adapter-backend-v2_1_0-openapi3-snippets.yaml'

  initContainers: []

  #   ingress:
  #     enabled: true
  #     hosts:
  #       specApi:
  #         host: ml-testing-toolkit-specapi.local
  #       adminApi:
  #         host: ml-testing-toolkit.local
  #   extraEnvironments:
  #     ml-default-environment.json: {
  #       "inputValues": {
  #         "VAR1": "VALUE1"
  #       }
  #     }

  ml-testing-toolkit-frontend:
    enabled: true
    nameOverride: 'fxp-ttk-frontend'
  #   ingress:
  #     enabled: true
  #     hosts:
  #       ui:
  #         host: ml-testing-toolkit.local
  #   config:
  #     API_BASE_URL: http://ml-testing-toolkit.local
